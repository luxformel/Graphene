/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Graphene;

import Axis.Axis;
import Axis.AxisPoints;
import Functions.Points;
import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author luxformel
 */
public class DrawPanel extends javax.swing.JPanel {

    private AxisPoints axisPoints;
    private Points points;
    private String typeOfAxis = "Normal";
    private boolean drawLines = false;

    
    /**
     * Creates new form DrawPanel
     */
    public DrawPanel() {
        initComponents();  
        
    }

    //setters
    
    public void setDrawLines(boolean drawLines) {
        this.drawLines = drawLines;
    }
    
    public void setAxisPoints(AxisPoints axisPoints) {
        this.axisPoints = axisPoints;
    }

    public void setPoints(Points points) {
        this.points = points;
    }

    public void setTypeOfAxis(String typeOfAxis) {
        this.typeOfAxis = typeOfAxis;
    }
    
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
        
        g.setColor(Color.WHITE);
        g.fillRect(0, 0, getWidth(), getHeight());
        
       // Axis.draw(getWidth(), getHeight(), g);
       if (axisPoints != null) {
            axisPoints.draw(g);
        }
       
        switch (typeOfAxis) {
            case "Down":
                Axis.drawBackgroundLines(getWidth(), getHeight(), g);
                  Axis.drawAxisDown(getWidth(), getHeight(), g);
                break;
            case "Up":
                Axis.drawBackgroundLines(getWidth(), getHeight(), g);
                  Axis.drawAxisUp(getWidth(), getHeight(), g);
                break;
            case "Normal":
                Axis.drawBackgroundLines(getWidth(), getHeight(), g);
                 Axis.drawAxis(getWidth(), getHeight(), g);  
                break;
            default:
                throw new AssertionError();
        }
        if (drawLines) {
            Points.drawLines(g);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
